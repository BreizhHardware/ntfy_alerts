name: Dependabot Build

on:
  pull_request:
    branches: [ 'main', 'dev' ]
    paths:
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - 'web/package.json'
      - 'web/pnpm-lock.yaml'

jobs:
  build-binary:
    if: ${{ startsWith(github.ref, 'refs/heads/dependabot/') || github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Installer Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Installer cross
        run: cargo install cross

      - name: Créer Cross.toml pour spécifier OpenSSL vendored
        run: |
          cat > Cross.toml << 'EOF'
          [build.env]
          passthrough = [
            "RUSTFLAGS",
            "OPENSSL_STATIC",
            "OPENSSL_NO_VENDOR"
          ]
          EOF

      - name: Construire avec cross et OpenSSL vendored
        env:
          OPENSSL_STATIC: 1
          RUSTFLAGS: "-C target-feature=+crt-static"
          OPENSSL_NO_VENDOR: 0
        run: |
          cross build --release --target x86_64-unknown-linux-musl --features vendored-openssl

      - name: Préparer le binaire
        run: |
          mkdir -p release
          cp target/x86_64-unknown-linux-musl/release/github-ntfy release/github-ntfy

      - name: Upload binaire comme artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-ntfy-dependabot
          path: release/github-ntfy

  build-frontend:
    if: ${{ github.actor == 'dependabot[bot]' || startsWith(github.ref, 'refs/heads/dependabot/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: '10.x'
          run_install: false

      - name: Build Frontend (Nuxt)
        run: |
          cd web
          pnpm install
          pnpm generate

      - name: Vérifier le contenu du répertoire output
        run: |
          ls -la web/.output/public || echo "Le répertoire .output n'existe pas!"

      - name: Upload frontend comme artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuxt-frontend-dependabot
          path: web/.output/public
